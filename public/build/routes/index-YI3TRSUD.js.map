{
  "version": 3,
  "sources": ["browser-route-module:Z:\\GIT\\Repositories\\GW2ItemFinder\\app\\routes\\index.tsx?browser", "../../../app/routes/index.tsx", "../../../app/components/ItemCard.tsx"],
  "sourcesContent": ["export { default } from \"Z:\\\\GIT\\\\Repositories\\\\GW2ItemFinder\\\\app\\\\routes\\\\index.tsx\";", "import { QuestionMarkCircleIcon } from '@heroicons/react/outline'\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport  SearchResult, { ItemCard } from '~/components/ItemCard';\nimport { useLoaderData } from 'remix';\nimport type { LoaderFunction } from 'remix';\n\n\n\n\n\nexport const loader : LoaderFunction = async() =>{\n  //const [itemCards, setItemCards] = useState<ItemCard[]>([]);\n  let buffer : JSX.Element[] = [];\n  // for (let i = 0; i < itemCards.length; i++) {\n  //   buffer.push (itemCards[i].render());\n  // }\n\n  return buffer;\n}\n\nfunction GenerateUID() : string {\n return Math.random().toString(36).substr(2, 32);\n}\n\nexport default function Index() {\n\n  const [itemCards, setItemCards] = useState<ItemCard[]>([]);\n  const [itemAmount, setItemAmount] = useState(0);\n\n  function FindItem(){\n    \n    let ic_copy = itemCards;\n    ic_copy.push({uid:GenerateUID()});\n    setItemCards(ic_copy);\n    setItemAmount(itemCards.length);\n    console.log(itemCards.length);\n\n  }\n\n  let items = useLoaderData();\n  return (\n    <>\n    <div className=\"bg-gray-800 border-solid rounded-2xl px-5 py-5\">\n      <div>\n        <div>\n          <label className=\"block text-sm font-medium text-white px-1 py-1\">\n            Enter a valid API Key\n            </label>\n        </div>\n        <input type=\"text\" name=\"api-key\" id=\"api-key\" className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-2 py-1 sm:text-sm border-gray-300 rounded-md\" placeholder=\"API Key\">\n        </input>\n        <div className=\"py-1\"></div>\n        <div>\n          <label className=\"block text-sm font-medium text-white px-1 py-1\">\n            Item ID\n            </label>\n        </div>\n        <div className=\"grid grid-cols-12 place-items-center justify-items-auto\">\n          <input type=\"text\" name=\"item-id\" id=\"item-id\" className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-2 py-1 sm:text-sm border-gray-300 rounded-md col-span-11\" placeholder=\"Item ID [e.g. 76643]\">\n          </input>\n          <Link to=\"/ItemLists\"> <QuestionMarkCircleIcon className=\"block h-8 w-8 text-white hover:text-gray-400\"></QuestionMarkCircleIcon></Link>\n        </div>\n        <div className=\"py-1\"></div>\n        <button name=\"confirm-button\" id=\"confirm-button\" className=\"pl-2 pr-2 py-1 rounded-md border-gray-300 bg-green-300 w-full mt-2\" onClick={FindItem}>Find My Shit!</button>\n      </div>\n    </div>\n    {itemCards.map((item)=>\n      <div key={item.uid} className=\"py-5\">\n         <SearchResult uid={item.uid}/>\n      </div>\n    )}\n    \n  </>\n  );\n}\n", "import { render } from \"@headlessui/react/dist/utils/render\";\r\nimport React, { Component } from \"react\";\r\nimport { GW2API_Call } from \"~/GW2Api/GW2API_Call\";\r\nimport { LoaderFunction, useLoaderData } from 'remix'\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nexport type ItemCard = {\r\n    uid : string\r\n}\r\n\r\nconst useAPIData = () => {\r\n    const [apiData, setApiData] = useState([])\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        setTimeout(()=>{\r\n            setLoading(false);\r\n        },2000);\r\n        \r\n    },[]);\r\n\r\n    return {apiData, isLoading}\r\n}\r\n\r\n\r\nconst ItemSearch = (props : ItemCard) => {\r\n    const { apiData, isLoading } = useAPIData();\r\n    return (\r\n        <div className=\"bg-gray-800 border-solid rounded-2xl px-5 py-5\">\r\n        {isLoading ? (\r\n            <p className=\"loading-text\">Loading Data...</p>\r\n        ) : (\r\n            <p className=\"loading-text\">{props.uid}</p>\r\n        )}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default ItemSearch;"],
  "mappings": ";;;;;;;;;;;;;;;AAAA;;;ACAA;AACA,oBAAgC;AAChC;;;ACFA;AACA,mBAAiC;AAGjC,oBAAoC;AAOpC,IAAM,aAAa,MAAM;AACrB,QAAM,CAAC,SAAS,cAAc,4BAAS;AACvC,QAAM,CAAC,WAAW,cAAc,4BAAS;AAEzC,+BAAU,MAAI;AACV,eAAW;AACX,eAAW,MAAI;AACX,iBAAW;AAAA,OACb;AAAA,KAEJ;AAEF,SAAO,EAAC,SAAS;AAAA;AAIrB,IAAM,aAAa,CAAC,UAAqB;AACrC,QAAM,EAAE,SAAS,cAAc;AAC/B,SACI,mDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACd,YACG,mDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAe,qBAE5B,mDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAgB,MAAM;AAAA;AAM/C,IAAO,mBAAQ;;;ADnBf,uBAAgC;AAC/B,SAAO,KAAK,SAAS,SAAS,IAAI,OAAO,GAAG;AAAA;AAG9B,iBAAiB;AAE9B,QAAM,CAAC,WAAW,gBAAgB,4BAAqB;AACvD,QAAM,CAAC,YAAY,iBAAiB,4BAAS;AAE7C,sBAAmB;AAEjB,QAAI,UAAU;AACd,YAAQ,KAAK,EAAC,KAAI;AAClB,iBAAa;AACb,kBAAc,UAAU;AACxB,YAAQ,IAAI,UAAU;AAAA;AAIxB,MAAI,QAAQ;AACZ,SACE,0FACA,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oDAAC,OAAD,MACE,oDAAC,OAAD,MACE,oDAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KAAiD,2BAIpE,oDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,IAAU,IAAG;AAAA,IAAU,WAAU;AAAA,IAAkH,aAAY;AAAA,MAEvL,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oDAAC,OAAD,MACE,oDAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KAAiD,aAIpE,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,IAAU,IAAG;AAAA,IAAU,WAAU;AAAA,IAA8H,aAAY;AAAA,MAEnM,oDAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAa,KAAC,oDAAC,gCAAD;AAAA,IAAwB,WAAU;AAAA,QAE3D,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oDAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAiB,IAAG;AAAA,IAAiB,WAAU;AAAA,IAAqE,SAAS;AAAA,KAAU,oBAGvJ,UAAU,IAAI,CAAC,SACd,oDAAC,OAAD;AAAA,IAAK,KAAK,KAAK;AAAA,IAAK,WAAU;AAAA,KAC3B,oDAAC,kBAAD;AAAA,IAAc,KAAK,KAAK;AAAA;AAAA;",
  "names": []
}
