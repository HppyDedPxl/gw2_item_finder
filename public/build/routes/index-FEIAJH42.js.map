{
  "version": 3,
  "sources": ["browser-route-module:Z:\\GIT\\Repositories\\GW2ItemFinder\\app\\routes\\index.tsx?browser", "../../../app/routes/index.tsx", "../../../app/Components/ItemCard.tsx", "../../../app/GW2Api/GW2API_Call.ts"],
  "sourcesContent": ["export { default } from \"Z:\\\\GIT\\\\Repositories\\\\GW2ItemFinder\\\\app\\\\routes\\\\index.tsx\";", "import { QuestionMarkCircleIcon } from '@heroicons/react/outline'\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ItemCard from '~/Components/ItemCard';\nimport { useLoaderData } from 'remix';\nimport type { LoaderFunction } from 'remix';\n\n\nconst testCards : ItemCard[] = [new ItemCard({\"apikey\":\"AAAAA\",\n\"itemid\":\"BBBB\"})];\n\nexport const loader : LoaderFunction = async() =>{\n  //const [itemCards, setItemCards] = useState<ItemCard[]>([]);\n  let buffer : JSX.Element[] = [];\n  // for (let i = 0; i < itemCards.length; i++) {\n  //   buffer.push (itemCards[i].render());\n  // }\n\n  return buffer;\n}\n\nexport default function Index() {\n  \n  const [itemCards, setItemCards] = useState<ItemCard[]>([]);\n  const [itemAmount, setItemAmount] = useState(0);\n\n  function FindItem(){\n    console.log(itemCards.length);\n    let ic_copy = itemCards;\n    ic_copy.push(new ItemCard({\"apikey\":\"AAAAA\",\n    \"itemid\":\"BBBB\"}));\n    setItemCards(ic_copy);\n    setItemAmount(itemCards.length);\n\n  }\n\n  let items = useLoaderData();\n  return (\n    <>\n    <div className=\"bg-gray-800 border-solid rounded-2xl px-5 py-5\">\n      <div>\n        <div>\n          <label className=\"block text-sm font-medium text-white px-1 py-1\">\n            Enter a valid API Key\n            </label>\n        </div>\n        <input type=\"text\" name=\"api-key\" id=\"api-key\" className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-2 py-1 sm:text-sm border-gray-300 rounded-md\" placeholder=\"API Key\">\n        </input>\n        <div className=\"py-1\"></div>\n        <div>\n          <label className=\"block text-sm font-medium text-white px-1 py-1\">\n            Item ID\n            </label>\n        </div>\n        <div className=\"grid grid-cols-12 place-items-center justify-items-auto\">\n          <input type=\"text\" name=\"item-id\" id=\"item-id\" className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-2 py-1 sm:text-sm border-gray-300 rounded-md col-span-11\" placeholder=\"Item ID [e.g. 76643]\">\n          </input>\n          <Link to=\"/ItemLists\"> <QuestionMarkCircleIcon className=\"block h-8 w-8 text-white hover:text-gray-400\"></QuestionMarkCircleIcon></Link>\n        </div>\n        <div className=\"py-1\"></div>\n        <button name=\"confirm-button\" id=\"confirm-button\" className=\"pl-2 pr-2 py-1 rounded-md border-gray-300 bg-green-300 w-full mt-2\" onClick={FindItem}>Find My Shit!</button>\n      </div>\n    </div>\n    {itemCards.map(card=>{\n      return card.render()\n    })}\n  </>\n  );\n}\n", "import { render } from \"@headlessui/react/dist/utils/render\";\r\nimport React, { Component } from \"react\";\r\nimport { GW2API_Call } from \"~/GW2Api/GW2API_Call\";\r\nimport { useLoaderData } from 'remix'\r\n\r\ninterface ItemCardProps{\r\n    apikey:string;\r\n    itemid:string;\r\n}\r\n\r\ninterface ItemCardState{\r\n    uid:string;\r\n    isLoading:boolean;\r\n    response:String;\r\n    gw2apicall: GW2API_Call;\r\n\r\n}\r\n\r\nclass ItemCard extends Component<ItemCardProps, ItemCardState>{\r\n\r\n\r\n    constructor(props: ItemCardProps){\r\n        super(props);\r\n        this.state = {\r\n            uid: this.GenerateUID(),\r\n            isLoading: true,\r\n            response: \"\",\r\n            gw2apicall: new GW2API_Call(props.apikey)\r\n        }\r\n        let context = this;\r\n        setTimeout(()=>{\r\n            context.state.gw2apicall.IsDone = true;\r\n\r\n        },1000)\r\n    }\r\n\r\n    GenerateUID() : string{\r\n        return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 32);\r\n    }\r\n\r\n    \r\n    render(){\r\n    return(\r\n        <div key={this.state.uid}>\r\n            {this.state.gw2apicall.IsDone ? this.state.gw2apicall.Response : \"DoneLoading\"}\r\n        </div>\r\n    );\r\n    }\r\n}\r\n   \r\n\r\n\r\nexport default ItemCard;", "\r\nexport class GW2API_Call {\r\n\r\n    ApiKey: string;\r\n    URI: string;\r\n    IsDone: boolean;\r\n    Response: string;\r\n\r\n    constructor(apiKey: string){\r\n        this.ApiKey = apiKey;\r\n        this.URI = \"\";\r\n        this.IsDone = false;\r\n        this.Response = \"\";\r\n    }\r\n\r\n    async call(){\r\n\r\n        let context = this;\r\n        await fetch(this.URI, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + this.ApiKey,\r\n                'Accept-Encoding': 'gzip, deflate, br',\r\n                'Connection': 'keep-alive'\r\n            }\r\n        }).then(res =>{\r\n            context.IsDone = true;\r\n            context.Response = JSON.stringify(res.json());\r\n        });\r\n    }\r\n\r\n    PollCharactersCharacters() {\r\n        this.URI = \"https://api.guildwars2.com/v2/characters/\";\r\n        this.IsDone = false;\r\n        this.Response = \"\";\r\n    }\r\n\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;AAAA;;;ACAA;AACA,oBAAgC;AAChC;;;ACFA;AACA,mBAAiC;;;ACDjC;AACO,wBAAkB;AAAA,EAOrB,YAAY,QAAe;AACvB,SAAK,SAAS;AACd,SAAK,MAAM;AACX,SAAK,SAAS;AACd,SAAK,WAAW;AAAA;AAAA,QAGd,OAAM;AAER,QAAI,UAAU;AACd,UAAM,MAAM,KAAK,KAAK;AAAA,MAClB,QAAQ;AAAA,MACR,SAAS;AAAA,QACL,iBAAiB,YAAY,KAAK;AAAA,QAClC,mBAAmB;AAAA,QACnB,cAAc;AAAA;AAAA,OAEnB,KAAK,SAAM;AACV,cAAQ,SAAS;AACjB,cAAQ,WAAW,KAAK,UAAU,IAAI;AAAA;AAAA;AAAA,EAI9C,2BAA2B;AACvB,SAAK,MAAM;AACX,SAAK,SAAS;AACd,SAAK,WAAW;AAAA;AAAA;;;ADhBxB,6BAAuB,uBAAuC;AAAA,EAG1D,YAAY,OAAqB;AAC7B,UAAM;AACN,SAAK,QAAQ;AAAA,MACT,KAAK,KAAK;AAAA,MACV,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY,IAAI,YAAY,MAAM;AAAA;AAEtC,QAAI,UAAU;AACd,eAAW,MAAI;AACX,cAAQ,MAAM,WAAW,SAAS;AAAA,OAEpC;AAAA;AAAA,EAGN,cAAsB;AAClB,WAAO,KAAK,SAAS,SAAS,IAAI,QAAQ,YAAY,IAAI,OAAO,GAAG;AAAA;AAAA,EAIxE,SAAQ;AACR,WACI,mDAAC,OAAD;AAAA,MAAK,KAAK,KAAK,MAAM;AAAA,OAChB,KAAK,MAAM,WAAW,SAAS,KAAK,MAAM,WAAW,WAAW;AAAA;AAAA;AAQ7E,IAAO,mBAAQ;;;AD5Cf,IAAM,YAAyB,CAAC,IAAI,iBAAS;AAAA,EAAC,UAAS;AAAA,EACvD,UAAS;AAAA;AAYM,iBAAiB;AAE9B,QAAM,CAAC,WAAW,gBAAgB,4BAAqB;AACvD,QAAM,CAAC,YAAY,iBAAiB,4BAAS;AAE7C,sBAAmB;AACjB,YAAQ,IAAI,UAAU;AACtB,QAAI,UAAU;AACd,YAAQ,KAAK,IAAI,iBAAS;AAAA,MAAC,UAAS;AAAA,MACpC,UAAS;AAAA;AACT,iBAAa;AACb,kBAAc,UAAU;AAAA;AAI1B,MAAI,QAAQ;AACZ,SACE,0FACA,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oDAAC,OAAD,MACE,oDAAC,OAAD,MACE,oDAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KAAiD,2BAIpE,oDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,IAAU,IAAG;AAAA,IAAU,WAAU;AAAA,IAAkH,aAAY;AAAA,MAEvL,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oDAAC,OAAD,MACE,oDAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KAAiD,aAIpE,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,IAAU,IAAG;AAAA,IAAU,WAAU;AAAA,IAA8H,aAAY;AAAA,MAEnM,oDAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAa,KAAC,oDAAC,gCAAD;AAAA,IAAwB,WAAU;AAAA,QAE3D,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oDAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAiB,IAAG;AAAA,IAAiB,WAAU;AAAA,IAAqE,SAAS;AAAA,KAAU,oBAGvJ,UAAU,IAAI,UAAM;AACnB,WAAO,KAAK;AAAA;AAAA;",
  "names": []
}
