{
  "version": 3,
  "sources": ["browser-route-module:Z:\\GIT\\Repositories\\GW2ItemFinder\\app\\routes\\index.tsx?browser", "../../../app/routes/index.tsx", "../../../app/Components/ItemCard.tsx"],
  "sourcesContent": ["export { default } from \"Z:\\\\GIT\\\\Repositories\\\\GW2ItemFinder\\\\app\\\\routes\\\\index.tsx\";", "import { QuestionMarkCircleIcon } from '@heroicons/react/outline'\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ItemCard from '~/Components/ItemCard';\nimport { useLoaderData } from 'remix';\nimport type { LoaderFunction } from 'remix';\n\n\nconst testCards : ItemCard[] = [new ItemCard({\"apikey\":\"AAAAA\",\n\"itemid\":\"BBBB\"})];\n\nexport const loader : LoaderFunction = async() =>{\n  //const [itemCards, setItemCards] = useState<ItemCard[]>([]);\n  let buffer : JSX.Element[] = [];\n  // for (let i = 0; i < itemCards.length; i++) {\n  //   buffer.push (itemCards[i].render());\n  // }\n\n  return buffer;\n}\n\nexport default function Index() {\n  \n  const [itemCards, setItemCards] = useState<ItemCard[]>([]);\n  const [itemAmount, setItemAmount] = useState(0);\n\n  function FindItem(){\n    console.log(itemCards.length);\n    let ic_copy = itemCards;\n    ic_copy.push(new ItemCard({\"apikey\":\"AAAAA\",\n    \"itemid\":\"BBBB\"}));\n    setItemCards(ic_copy);\n    setItemAmount(itemCards.length);\n\n  }\n\n  let items = useLoaderData();\n  return (\n    <>\n    <div className=\"bg-gray-800 border-solid rounded-2xl px-5 py-5\">\n      <div>\n        <div>\n          <label className=\"block text-sm font-medium text-white px-1 py-1\">\n            Enter a valid API Key\n            </label>\n        </div>\n        <input type=\"text\" name=\"api-key\" id=\"api-key\" className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-2 py-1 sm:text-sm border-gray-300 rounded-md\" placeholder=\"API Key\">\n        </input>\n        <div className=\"py-1\"></div>\n        <div>\n          <label className=\"block text-sm font-medium text-white px-1 py-1\">\n            Item ID\n            </label>\n        </div>\n        <div className=\"grid grid-cols-12 place-items-center justify-items-auto\">\n          <input type=\"text\" name=\"item-id\" id=\"item-id\" className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-2 py-1 sm:text-sm border-gray-300 rounded-md col-span-11\" placeholder=\"Item ID [e.g. 76643]\">\n          </input>\n          <Link to=\"/ItemLists\"> <QuestionMarkCircleIcon className=\"block h-8 w-8 text-white hover:text-gray-400\"></QuestionMarkCircleIcon></Link>\n        </div>\n        <div className=\"py-1\"></div>\n        <button name=\"confirm-button\" id=\"confirm-button\" className=\"pl-2 pr-2 py-1 rounded-md border-gray-300 bg-green-300 w-full mt-2\" onClick={FindItem}>Find My Shit!</button>\n      </div>\n    </div>\n    {itemCards.map(card=>{\n      return card.render()\n    })}\n  </>\n  );\n}\n", "import { render } from \"@headlessui/react/dist/utils/render\";\r\nimport React, { Component } from \"react\";\r\nimport { GW2API_Call } from \"~/GW2Api/GW2API_Call\";\r\nimport { LoaderFunction, useLoaderData } from 'remix'\r\n\r\n// interface ItemCardProps{\r\n//     apikey:string;\r\n//     itemid:string;\r\n// }\r\n\r\n// interface ItemCardState{\r\n//     uid:string;\r\n//     isLoading:boolean;\r\n//     response:String;\r\n//     gw2apicall: GW2API_Call;\r\n\r\n// }\r\nexport let loader: LoaderFunction = async () => {\r\n    return {\r\n        haha:\"lol\"\r\n    };\r\n  };\r\n\r\n// class ItemCard extends Component<ItemCardProps, ItemCardState>{\r\n\r\n\r\n//     constructor(props: ItemCardProps){\r\n//         super(props);\r\n//         this.state = {\r\n//             uid: this.GenerateUID(),\r\n//             isLoading: true,\r\n//             response: \"\",\r\n//             gw2apicall: new GW2API_Call(props.apikey)\r\n//         }\r\n        \r\n//     }\r\n\r\n//     GenerateUID() : string{\r\n//         return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 32);\r\n//     }\r\n\r\n    \r\n//     render(){\r\n//     let all = useLoaderData();\r\n//     return (\r\n//         <div key={this.state.uid}>\r\n//         {/* {all.map((a) => (\r\n//             <div > {a.id} </div>\r\n//         ))} */}\r\n//         </div>\r\n//     )};\r\n//     // return(\r\n//     //     <div key={this.state.uid}>\r\n//     //         {this.state.gw2apicall.IsDone ? this.state.gw2apicall.Response : \"DoneLoading\"}\r\n//     //     </div>\r\n//     // );\r\n//     //}\r\n// }\r\n   \r\n\r\n\r\n// export default ItemCard;\r\n\r\nexport default function ItemCard(){\r\n    const data = useLoaderData();\r\n    return (\r\n        <div key=\"e,f0wef3\">\r\n            {data.map((d)=>{\r\n                \r\n            })}\r\n        </div>\r\n    );\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;AAAA;;;ACAA;AACA,oBAAgC;AAChC;;;ACFA;AACA,mBAAiC;AA8DlB,oBAAmB;AAC9B,QAAM,OAAO;AACb,SACI,mDAAC,OAAD;AAAA,IAAK,KAAI;AAAA,KACJ,KAAK,IAAI,CAAC,MAAI;AAAA;AAAA;;;AD3D3B,IAAM,YAAyB,CAAC,IAAI,SAAS;AAAA,EAAC,UAAS;AAAA,EACvD,UAAS;AAAA;AAYM,iBAAiB;AAE9B,QAAM,CAAC,WAAW,gBAAgB,4BAAqB;AACvD,QAAM,CAAC,YAAY,iBAAiB,4BAAS;AAE7C,sBAAmB;AACjB,YAAQ,IAAI,UAAU;AACtB,QAAI,UAAU;AACd,YAAQ,KAAK,IAAI,SAAS;AAAA,MAAC,UAAS;AAAA,MACpC,UAAS;AAAA;AACT,iBAAa;AACb,kBAAc,UAAU;AAAA;AAI1B,MAAI,QAAQ;AACZ,SACE,0FACA,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oDAAC,OAAD,MACE,oDAAC,OAAD,MACE,oDAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KAAiD,2BAIpE,oDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,IAAU,IAAG;AAAA,IAAU,WAAU;AAAA,IAAkH,aAAY;AAAA,MAEvL,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oDAAC,OAAD,MACE,oDAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KAAiD,aAIpE,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,IAAU,IAAG;AAAA,IAAU,WAAU;AAAA,IAA8H,aAAY;AAAA,MAEnM,oDAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAa,KAAC,oDAAC,gCAAD;AAAA,IAAwB,WAAU;AAAA,QAE3D,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oDAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAiB,IAAG;AAAA,IAAiB,WAAU;AAAA,IAAqE,SAAS;AAAA,KAAU,oBAGvJ,UAAU,IAAI,UAAM;AACnB,WAAO,KAAK;AAAA;AAAA;",
  "names": []
}
